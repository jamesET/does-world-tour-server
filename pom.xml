<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.justjames</groupId>
	<artifactId>does-world-tour-server</artifactId>
	<version>1.0.24-SNAPSHOT</version>

	<name>Doe's World of Beer Tour</name>
	<description>Server backend for the Doe's World Tour of Beer mobile app for the patrons of Doe's Bentonville.</description>
	
	<scm>
      <developerConnection>scm:git:https://github.com/jamesET/does-world-tour-server.git</developerConnection>
  	  <tag>does-world-tour-server-1.0</tag>
  	  <url>scm:git:https://github.com/jamesET/does-world-tour-server.git</url>
	</scm>
	
	<distributionManagement>
	    <repository>
	      <id>github.repo</id>
	      <name>GitHumb.com</name>
	      <url>https://github.com/jamesET/does-world-tour-server.git</url>
	    </repository>
	</distributionManagement>
	

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<jquery.version>2.1.1</jquery.version>
		<bootstrap.version>3.2.0</bootstrap.version>
		<shiro.version>1.7.0</shiro.version>
		<angular.version>1.0</angular.version>
     	 <docker.image.prefix>springio</docker.image.prefix>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>net.bull.javamelody</groupId>
			<artifactId>javamelody-core</artifactId>
			<version>1.74.0</version>
		</dependency>
	
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>${bootstrap.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.webjars</groupId>
					<artifactId>jquery</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>${jquery.version}</version>
		</dependency>


		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-web</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>30.0-jre</version>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>3.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.interceptor</groupId>
			<artifactId>javax.interceptor-api</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
<!-- 			<plugin> -->
<!-- 				<groupId>org.springframework.boot</groupId> -->
<!-- 				<artifactId>spring-boot-maven-plugin</artifactId> -->
<!-- 			</plugin> -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.4</version>
				
			    <executions>
    			    <!--
           			 Prepares the property pointing to the JaCoCo runtime agent which
			            is passed as VM argument when Maven the Surefire plugin is executed.
        			-->
        			<execution>
            			<id>pre-unit-test</id>
            			<goals>
                			<goal>prepare-agent</goal>
            			</goals>
            			<configuration>
                			<!-- Sets the path to the file which contains the execution data. -->
                			<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                			<!--
                    			Sets the name of the property containing the settings
                    			for JaCoCo runtime agent.
                			-->
                			<propertyName>surefireArgLine</propertyName>
            			</configuration>
        			</execution>
        			<!--
            			Ensures that the code coverage report for unit tests is created after
            			unit tests have been run.
        			-->
        			<execution>
            			<id>post-unit-test</id>
            			<phase>test</phase>
            			<goals>
                			<goal>report</goal>
            			</goals>
            			<configuration>
                			<!-- Sets the path to the file which contains the execution data. -->
                			<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                			<!-- Sets the output directory for the code coverage report. -->
                			<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
            			</configuration>
        			</execution>
        			
        	        <execution>
          			  <id>pre-integration-test</id>
            			<phase>pre-integration-test</phase>
            			<goals>
                			<goal>prepare-agent</goal>
            			</goals>
            			<configuration>
                			<!-- Sets the path to the file which contains the execution data. -->
                			<destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                			<!--
                    			Sets the name of the property containing the settings
                    			for JaCoCo runtime agent.
                			-->
                			<propertyName>failsafeArgLine</propertyName>
            			</configuration>
        			</execution>
        			<!--
            			Ensures that the code coverage report for integration tests after
            			integration tests have been run.
        			-->
        			<execution>
            			<id>post-integration-test</id>
            			<phase>post-integration-test</phase>
            			<goals>
                			<goal>report</goal>
            			</goals>
            			<configuration>
                			<!-- Sets the path to the file which contains the execution data. -->
                			<dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                			<!-- Sets the output directory for the code coverage report. -->
                			<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
            			</configuration>
        			</execution>
    			</executions>				
			</plugin>

			<plugin>
    			<groupId>org.apache.maven.plugins</groupId>
    			<artifactId>maven-surefire-plugin</artifactId>
    			<configuration>
        			<!-- Sets the VM argument line used when unit tests are run. -->
        			<argLine>${surefireArgLine}</argLine>
        			<!-- Skips unit tests if the value of skip.unit.tests property is true -->
        			<skipTests>${skip.unit.tests}</skipTests>
        			<!-- Excludes integration tests when unit tests are run. -->
        			<excludes>
            			<exclude>**/IT*.java</exclude>
        			</excludes>
    			</configuration>
			</plugin>
		
         	
			
		</plugins>
	</build>


	<packaging>war</packaging>
</project>
